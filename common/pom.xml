<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<groupId>com.demo</groupId>
		<artifactId>demo</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>

	<modelVersion>4.0.0</modelVersion>

	<artifactId>common</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>


	<dependencies>
		<!-- 在Java中处理日期和时间是很常见的需求，基础的工具类就是我们熟悉的Date和Calendar，然而这些工具类的api使用并不是很方便和强大，于是就诞生了Joda-Time这个专门处理日期时间的库。-->
<!--		<dependency>-->
<!--			<groupId>joda-time</groupId>-->
<!--			<artifactId>joda-time</artifactId>-->
<!--		</dependency>-->

<!--		<dependency>-->
<!--			<groupId>commons-lang</groupId>-->
<!--			<artifactId>commons-lang</artifactId>-->
<!--		</dependency>-->

<!--		<dependency>-->
<!--			<groupId>commons-io</groupId>-->
<!--			<artifactId>commons-io</artifactId>-->
<!--		</dependency>-->

<!--		&lt;!&ndash; fastJson用于对JSON格式的数据进行解析和打包 &ndash;&gt;-->
<!--		<dependency>-->
<!--			<groupId>com.alibaba</groupId>-->
<!--			<artifactId>fastjson</artifactId>-->
<!--		</dependency>-->

		<!-- 用于转换拼音，调用PinyinHelper类的静态工具方法 -->
<!--		<dependency>-->
<!--			<groupId>com.belerweb</groupId>-->
<!--			<artifactId>pinyin4j</artifactId>-->
<!--		</dependency>-->

		<!-- redis -->
<!--		<dependency>-->
<!--			<groupId>org.springframework.boot</groupId>-->
<!--			<artifactId>spring-boot-starter-data-redis</artifactId>-->
<!--		</dependency>-->

		<!-- 用于摘要运算、编码解码 -->
<!--		<dependency>-->
<!--			<groupId>commons-codec</groupId>-->
<!--			<artifactId>commons-codec</artifactId>-->
<!--		</dependency>-->

		<!-- JPA的宗旨是为POJO提供持久化标准规范，比如@Table注解 -->
<!--		<dependency>-->
<!--			<groupId>javax.persistence</groupId>-->
<!--			<artifactId>persistence-api</artifactId>-->
<!--		</dependency>-->

<!--		&lt;!&ndash; thymeleaf：前后端数据交互模板引擎 &ndash;&gt;-->
<!--		<dependency>-->
<!--			<groupId>org.springframework.boot</groupId>-->
<!--			<artifactId>spring-boot-starter-thymeleaf</artifactId>-->
<!--		</dependency>-->
<!--        <dependency>-->
<!--            <groupId>org.mybatis</groupId>-->
<!--            <artifactId>mybatis</artifactId>-->
<!--            <version>3.4.5</version>-->
<!--            <scope>compile</scope>-->
<!--        </dependency>-->
<!--		<dependency>-->
<!--			<groupId>com.fasterxml.jackson.core</groupId>-->
<!--			<artifactId>jackson-annotations</artifactId>-->
<!--		</dependency>-->
		<!--通过编码方式去运行插件先需要引入mybatis-generator-core依赖-->
		<dependency>
			<groupId>org.mybatis.generator</groupId>
			<artifactId>mybatis-generator-core</artifactId>
			<version>1.4.0</version>
		</dependency>
		<!-- Mybatis启动器，会自动添加Mybatis相关的jar包-->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
		</dependency>
		<!-- Mysql驱动依赖 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

	</dependencies>


	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.xml</include>
				</includes>
			</resource>

<!--			<resource>-->
<!--				<directory>src/main/java</directory>-->
<!--				<includes>-->
<!--					<include>**/*.xml</include>-->
<!--				</includes>-->
<!--			</resource>-->

		</resources>
		<plugins>
			<!-- mybatis generator 自动生成代码插件 -->
			<plugin>
				<groupId>org.mybatis.generator</groupId>
				<artifactId>mybatis-generator-maven-plugin</artifactId>
				<version>1.4.0</version>
				<configuration>
					<!--配置文件的位置-->
					<configurationFile>src/main/resources/generatorConfig.xml</configurationFile>
					<overwrite>true</overwrite>
					<verbose>true</verbose>
				</configuration>
			</plugin>


		</plugins>

	</build>
</project>