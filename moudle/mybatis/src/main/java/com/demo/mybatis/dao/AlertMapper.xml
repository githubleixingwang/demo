<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.mybatis.dao.AlertMapper">
  <resultMap id="BaseResultMap" type="com.demo.mybatis.domain.Alert">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="esn" jdbcType="VARCHAR" property="esn" />
    <result column="alert_time" jdbcType="TIMESTAMP" property="alertTime" />
    <result column="insert_time" jdbcType="TIMESTAMP" property="insertTime" />
    <result column="alert_model" jdbcType="VARCHAR" property="alertModel" />
    <result column="container_name" jdbcType="VARCHAR" property="containerName" />
    <result column="app_name" jdbcType="VARCHAR" property="appName" />
    <result column="event" jdbcType="VARCHAR" property="event" />
    <result column="msg" jdbcType="VARCHAR" property="msg" />
    <result column="level" jdbcType="VARCHAR" property="level" />

  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, esn, alert_time, insert_time, alert_model, container_name, app_name, event, msg, 
    level
  </sql>
  <select id="selectByExample" parameterType="com.demo.mybatis.domain.AlertExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from alert
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from alert
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from alert
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.demo.mybatis.domain.AlertExample">
    delete from alert
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.demo.mybatis.domain.Alert">
    insert into alert (esn, alert_time, insert_time, 
      alert_model, container_name, app_name, 
      event, msg, level)
    values (#{esn,jdbcType=VARCHAR}, #{alertTime,jdbcType=TIMESTAMP}, #{insertTime,jdbcType=TIMESTAMP}, 
      #{alertModel,jdbcType=VARCHAR}, #{containerName,jdbcType=VARCHAR}, #{appName,jdbcType=VARCHAR}, 
      #{event,jdbcType=VARCHAR}, #{msg,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.demo.mybatis.domain.Alert">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into alert
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="esn != null">
        esn,
      </if>
      <if test="alertTime != null">
        alert_time,
      </if>
      <if test="insertTime != null">
        insert_time,
      </if>
      <if test="alertModel != null">
        alert_model,
      </if>
      <if test="containerName != null">
        container_name,
      </if>
      <if test="appName != null">
        app_name,
      </if>
      <if test="event != null">
        event,
      </if>
      <if test="msg != null">
        msg,
      </if>
      <if test="level != null">
        level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="esn != null">
        #{esn,jdbcType=VARCHAR},
      </if>
      <if test="alertTime != null">
        #{alertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="insertTime != null">
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="alertModel != null">
        #{alertModel,jdbcType=VARCHAR},
      </if>
      <if test="containerName != null">
        #{containerName,jdbcType=VARCHAR},
      </if>
      <if test="appName != null">
        #{appName,jdbcType=VARCHAR},
      </if>
      <if test="event != null">
        #{event,jdbcType=VARCHAR},
      </if>
      <if test="msg != null">
        #{msg,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="count"  resultType="int">
    select count(*) from alert
  </select>
  <select id="select"  resultMap="BaseResultMap">
    select  * from alert
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update alert
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.esn != null">
        esn = #{record.esn,jdbcType=VARCHAR},
      </if>
      <if test="record.alertTime != null">
        alert_time = #{record.alertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.insertTime != null">
        insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.alertModel != null">
        alert_model = #{record.alertModel,jdbcType=VARCHAR},
      </if>
      <if test="record.containerName != null">
        container_name = #{record.containerName,jdbcType=VARCHAR},
      </if>
      <if test="record.appName != null">
        app_name = #{record.appName,jdbcType=VARCHAR},
      </if>
      <if test="record.event != null">
        event = #{record.event,jdbcType=VARCHAR},
      </if>
      <if test="record.msg != null">
        msg = #{record.msg,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update alert
    set id = #{record.id,jdbcType=INTEGER},
      esn = #{record.esn,jdbcType=VARCHAR},
      alert_time = #{record.alertTime,jdbcType=TIMESTAMP},
      insert_time = #{record.insertTime,jdbcType=TIMESTAMP},
      alert_model = #{record.alertModel,jdbcType=VARCHAR},
      container_name = #{record.containerName,jdbcType=VARCHAR},
      app_name = #{record.appName,jdbcType=VARCHAR},
      event = #{record.event,jdbcType=VARCHAR},
      msg = #{record.msg,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.mybatis.domain.Alert">
    update alert
    <set>
      <if test="esn != null">
        esn = #{esn,jdbcType=VARCHAR},
      </if>
      <if test="alertTime != null">
        alert_time = #{alertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="insertTime != null">
        insert_time = #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="alertModel != null">
        alert_model = #{alertModel,jdbcType=VARCHAR},
      </if>
      <if test="containerName != null">
        container_name = #{containerName,jdbcType=VARCHAR},
      </if>
      <if test="appName != null">
        app_name = #{appName,jdbcType=VARCHAR},
      </if>
      <if test="event != null">
        event = #{event,jdbcType=VARCHAR},
      </if>
      <if test="msg != null">
        msg = #{msg,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.mybatis.domain.Alert">
    update alert
    set esn = #{esn,jdbcType=VARCHAR},
      alert_time = #{alertTime,jdbcType=TIMESTAMP},
      insert_time = #{insertTime,jdbcType=TIMESTAMP},
      alert_model = #{alertModel,jdbcType=VARCHAR},
      container_name = #{containerName,jdbcType=VARCHAR},
      app_name = #{appName,jdbcType=VARCHAR},
      event = #{event,jdbcType=VARCHAR},
      msg = #{msg,jdbcType=VARCHAR},
      level = #{level,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>


